h2. Description

Precalculation is a Ruby on Rails plugin that defines a mechanism for managing and populating an aggregate table stack to speed up ActiveRecord calculation queries on large datasets.

h2. Install

<pre>
	<code>
		git clone git://github.com/henrygarner/precalculation.git vendor/plugins/calculation
	</code>
</pre>

h2. Usage

<pre>
	<code>
		ruby script/generate precalculation [activerecord_class_name]
	</code>
</pre>

This will create the db/precalculation directory and a boilerplate class inheriting from ActiveRecord::Precalculation.

Next, define your calculations. You can define as many as you wish.

<pre>
	<code>
		# Defined in db/precalculation/my_model_precalculation.rb
		
		class MyModelPrecalculation < ActiveRecord::Precalculation
		
			# Defines an aggregate table called 'aggregate_table' with 6 columns.
			# dimension1 - dimension3 are columns in the ActiveRecord::Base subclass
			# you want to aggregate by.
			# The final three columns define the calculations you wish you perform 
			# where fact1 and fact2 are columns in the ActiveRecord::Base subclass
			# you wish to calculate on. Counter provides a simple star count which 
			# can enable subsequent calculations to use this table as their data source.
		
			calculate 'aggregate_table' do |t|
			  t.dimension1
			  t.dimension2
			  t.dimension3
			  t.sum :fact1
			  t.avg :fact2
			  t.counter
			end
			
			# Further calculations ...
		end
	</code>
</pre>

Next, run your calculations.

<pre>
	<code>
		rake db:precalculate
	</code>
</pre>

You can run your calculations with conditions if you only need to refresh a subset of your data.

<pre>
	<code>
		rake db:precalculate["date_dimension >= '2008-01-01 00:00:00'"]
	</code>
</pre>

h2. Behind the scenes...

Before executing any of the defined calculations, the Precalculation module will examine them and try to figure out in which order they should be executed. If all the data for one calculation (A) can be accurately determined from the output of another (B), B will be executed first and A will take B as its data source.

h2. TODO

Educate ActiveRecord::Base about how to use the aggregate table stack when calculate is called on one of its subclasses.

h3. Author

"Henry Garner":http://www.quantedit.com

h3. Licence

"MIT":http://www.opensource.org/licenses/mit-license.php